{"version":3,"sources":["webpack:///./refs/timerRefs.js","webpack:///./index.js"],"names":["article","document","getElementById","daysContent","querySelector","hoursContent","minsContent","secsContent","selector","targetDate","this","date","count","timeDelta","Date","now","days","Math","floor","hours","mins","secs","refs","textContent","start","setInterval"],"mappings":"uIAAe,GACbA,QAASC,SAASC,eAAe,WACjCC,YAAaF,SAASG,cAAc,2BACpCC,aAAcJ,SAASG,cAAc,4BACrCE,YAAaL,SAASG,cAAc,2BACpCG,YAAaN,SAASG,cAAc,4BC+CxB,I,WA5BZ,cAAsC,IAAxBI,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWA,EAChBE,KAAKC,KAAOF,E,2BAGdG,MAAA,WACE,IAAIC,EAAYH,KAAKC,KAAOG,KAAKC,MAC3BC,EAAOC,KAAKC,MAAML,EAAY,OAC9BM,EAAQF,KAAKC,MAChBL,EAAY,MAAb,MAEIO,EAAOH,KAAKC,MAAOL,EAAY,KAAb,KAClBQ,EAAOJ,KAAKC,MAAOL,EAAY,IAAe,KAEpDS,EAAKnB,YAAYoB,YAAcP,EAC/BM,EAAKjB,aAAakB,YAAcJ,EAChCG,EAAKhB,YAAYiB,YAAcH,EAC/BE,EAAKf,YAAYgB,YAAcF,G,EAGjCG,MAAA,WAAQ,WACNd,KAAKE,QACUa,aAAY,WACzB,EAAKb,UACJ,M,KAIO,CAAmB,CAC/BJ,SAAU,WACVC,WAAY,IAAIK,KAAK,iBAGjBU,U","file":"main.fa190a523711d2b03cd9.js","sourcesContent":["export default {\r\n  article: document.getElementById('timer-1'),\r\n  daysContent: document.querySelector('span[data-value=\"days\"]'),\r\n  hoursContent: document.querySelector('span[data-value=\"hours\"]'),\r\n  minsContent: document.querySelector('span[data-value=\"mins\"]'),\r\n  secsContent: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n","import css from './styles.css';\r\nimport refs from '../src/refs/timerRefs.js';\r\n\r\n// let targetDateF = 'Jan 20 2021 00:00:00';\r\n// function myTimer(date) {\r\n//   let timeDelta = new Date(date) - Date.now();\r\n//   const days = Math.floor(timeDelta / (1000 * 60 * 60 * 24));\r\n//   const hours = Math.floor(\r\n//     (timeDelta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n//   );\r\n//   const mins = Math.floor((timeDelta % (1000 * 60 * 60)) / (1000 * 60));\r\n//   const secs = Math.floor((timeDelta % (1000 * 60)) / 1000);\r\n\r\n//   refs.daysContent.textContent = days;\r\n//   refs.hoursContent.textContent = hours;\r\n//   refs.minsContent.textContent = mins;\r\n//   refs.secsContent.textContent = secs;\r\n// }\r\n\r\n// setInterval(() => {\r\n//   myTimer(targetDateF);\r\n// }, 1000);\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.date = targetDate;\r\n  }\r\n\r\n  count() {\r\n    let timeDelta = this.date - Date.now();\r\n    const days = Math.floor(timeDelta / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n      (timeDelta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n    );\r\n    const mins = Math.floor((timeDelta % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((timeDelta % (1000 * 60)) / 1000);\r\n\r\n    refs.daysContent.textContent = days;\r\n    refs.hoursContent.textContent = hours;\r\n    refs.minsContent.textContent = mins;\r\n    refs.secsContent.textContent = secs;\r\n  }\r\n\r\n  start() {\r\n    this.count();\r\n    let interval = setInterval(() => {\r\n      this.count();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 20 2021'),\r\n});\r\n\r\ntimer.start();\r\n"],"sourceRoot":""}